name: NodeGoat Security Analysis - Vorpal
on:
  push:
    branches: [ "main", "master" ]
  pull_request:
    branches: [ "main", "master" ]

permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  vorpal-scan:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      # Find all JavaScript files dynamically
      - name: Find JavaScript files
        id: find-js-files
        run: |
          # Find all .js files, exclude node_modules, format as comma-separated
          JS_FILES=$(find . -name "*.js" -not -path "./node_modules/*" -not -path "./coverage/*" -not -path "./logs/*" | tr '\n' ',' | sed 's/,$//')
          echo "js_files=$JS_FILES" >> $GITHUB_OUTPUT
          echo "Found JavaScript files: $JS_FILES"
          
          # Also show individual files for demo purposes
          echo "📁 JavaScript files found for analysis:"
          find . -name "*.js" -not -path "./node_modules/*" -not -path "./coverage/*" -not -path "./logs/*" | head -10
        
      # Run Vorpal with multiple reporters for better visibility
      - name: Vorpal Security Scan (SARIF Output)
        if: steps.find-js-files.outputs.js_files != ''
        uses: checkmarx/vorpal-reviewdog-github-action@v1.2.0
        with:
          source_path: "${{ steps.find-js-files.outputs.js_files }}"
          github_token: ${{ secrets.GITHUB_TOKEN }}
          reporter: github-pr-review
          level: error
          fail_on_error: true
          filter_mode: file
          
      # Alternative: Run Vorpal with GitHub Check reporter for more visibility
      - name: Vorpal Security Scan (GitHub Check)
        if: steps.find-js-files.outputs.js_files != ''
        continue-on-error: true
        uses: checkmarx/vorpal-reviewdog-github-action@v1.2.0
        with:
          source_path: "${{ steps.find-js-files.outputs.js_files }}"
          github_token: ${{ secrets.GITHUB_TOKEN }}
          reporter: github-check
          level: warning
          fail_on_error: false
          filter_mode: file
          
      # Run direct Vorpal CLI for artifacts/logs
      - name: Run Vorpal CLI for Demo Artifacts
        if: steps.find-js-files.outputs.js_files != ''
        continue-on-error: true
        run: |
          # Install Vorpal CLI directly
          npm install -g @checkmarx/vorpal-cli
          
          # Create results directory
          mkdir -p vorpal-results
          
          # Run Vorpal on key files and capture output
          echo "🔍 Running Vorpal Analysis..."
          
          # Run on individual files for detailed output
          for file in $(find . -name "*.js" -not -path "./node_modules/*" -not -path "./coverage/*" -not -path "./logs/*" | head -5); do
            echo "Analyzing: $file"
            vorpal scan "$file" --output-format json > "vorpal-results/$(basename $file .js)_results.json" 2>&1 || true
            vorpal scan "$file" --output-format sarif > "vorpal-results/$(basename $file .js)_results.sarif" 2>&1 || true
          done
          
          # Generate summary report
          echo "📊 Vorpal Analysis Summary" > vorpal-results/summary.md
          echo "==========================" >> vorpal-results/summary.md
          echo "" >> vorpal-results/summary.md
          echo "**Files Analyzed:** $(find . -name "*.js" -not -path "./node_modules/*" | wc -l)" >> vorpal-results/summary.md
          echo "**Scan Date:** $(date)" >> vorpal-results/summary.md
          echo "" >> vorpal-results/summary.md
          
          # Show results
          ls -la vorpal-results/
          
      # Upload results as artifacts for demo
      - name: Upload Vorpal Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: vorpal-security-results
          path: |
            vorpal-results/
            *.sarif
          retention-days: 30
          
      # Create a visible summary in the workflow
      - name: Display Results Summary
        if: always()
        run: |
          echo "🛡️ Vorpal Security Scan Completed"
          echo "=================================="
          echo ""
          echo "📂 Files scanned: $(find . -name "*.js" -not -path "./node_modules/*" | wc -l) JavaScript files"
          echo "📊 Results available in artifacts"
          echo "🔍 Check the 'Security' tab for detailed findings"
          echo ""
          if [ -d "vorpal-results" ]; then
            echo "📋 Generated reports:"
            ls -la vorpal-results/ | grep -E '\.(json|sarif|md)$' || echo "No report files found"
          fi